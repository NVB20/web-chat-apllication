name: upload docker image

on:
  workflow_run:
    workflows: ["Test Application"]
    types:
      - completed

jobs:
  merge-main:
    runs-on: ubuntu-latest  
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    steps:
      - name: Notify Success  
        run: echo 'The last workflow "Test Application" passed successfully. Starting to push the image to Docker Hub.'
      
      - name: Merge to main
        uses: devmasx/merge-branch@master
        with:
          type: now
          from_branch: feature
          target_branch: main
          github_token: ${{ secrets.GIT_TOKEN }}
      
      - name: Discord notification
        env:
          DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
        uses: Ilshidur/action-discord@master
        with:
          args: 'The project tests has been succesfull.'

  docker-image:
    runs-on: ubuntu-latest  
    needs: merge-main
    steps:
      - name: start process
        run: | 
          echo "Updating the Docker image in Docker Hub repository: ${{ secrets.DOCKERHUB_USERNAME }}/chat-app" 
      
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker 
        uses: docker/setup-buildx-action@v2

      - name: Get Commit Message
        id: commit_message
        run: echo "::set-output name=message::$(git log -1 --pretty=%B)"
      
      - name: Replace Spaces with Underscores
        id: commit_message_underscore
        run: |
          commit_message=$(git log -1 --pretty=%B)  # Get the commit message
          cleaned_tag=$(echo "$commit_message" | tr -cd '[:alnum:]-_')  # Remove invalid characters
          commit_message_underscore=$(echo "$cleaned_tag" | sed 's/ /_/g')  # Replace spaces with underscores
          echo "::set-output name=message_underscore::$commit_message_underscore"  # Set the output variable

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/chat-app:${{ steps.commit_message_underscore.outputs.message_underscore }}
          
      - name: Discord notification
        env:
          DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
        uses: Ilshidur/action-discord@master
        with:
          args: 'A new Docker image is now available on Docker Hub. https://hub.docker.com/repository/docker/nvb20/chat-app/general'


  update-deployment-tag:
    runs-on: ubuntu-latest
    needs: docker-image
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Get Commit Message
        id: get_commit_message
        run: echo "::set-output name=message::$(git log -1 --pretty=%B)"

      - name: Replace Spaces with Underscores
        id: commit_message_underscore
        run: |
          commit_message=$(git log -1 --pretty=%B)
          commit_message_underscore=$(echo "$commit_message" | sed 's/ /_/g')
          echo "::set-output name=message_underscore::$commit_message_underscore"

      - name: clone CD repo
        uses: actions/checkout@v3
        with:
          repository: nvb20/chatroom-k8s-charts
          path: helm-repo
          ref: main #branch to clone from in the cloned repo
          token: ${{ secrets.GIT_TOKEN }}

      - name: Commit and Push files
        run: |
          cd helm-repo/ && ./image-tag.sh ${{ secrets.DOCKERHUB_USERNAME }}/chat-app:${{ steps.commit_message_underscore.outputs.message_underscore }}
          git config --global user.email "nivb49@gmail.com"
          git config --global user.name "NVB20"
          git add .
          git commit -m "updated chat-app image"
          git push origin main      
      
      - name: Discord notification
        env:
          DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
        uses: Ilshidur/action-discord@master
        with:
          args: 'The Helm chart has been updated with the new image'
          
          
  on-failure:
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'failure' }}
    steps:
      - run: echo 'The triggering workflow "Test Application" failed. Unable to push the Docker image to Docker Hub.'
    
      - name: Discord notification
        env:
          DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
        uses: Ilshidur/action-discord@master
        with:
          args: "The project's tests have failed, resulting in the failure to generate a new image. Additionally, the merge request has been denied"